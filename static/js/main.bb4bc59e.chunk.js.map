{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","getUser","usersFromServer","find","todosFromServer","maxTodoId","sort","a","b","addTodo","newTodo","push","App","useState","setTitle","setUser","errorTitle","setErrorTitle","errorUser","setErrorUser","action","method","onSubmit","event","preventDefault","checkTitle","trim","Number","type","placeholder","value","onChange","validatedTitle","target","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb4bc59e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\n\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    className={\n      classNames('TodoInfo', { 'TodoInfo--completed': todo.completed })\n    }\n    data-id={todo.id}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n    {todo.user && (\n      <UserInfo user={todo.user} />\n    )}\n  </article>\n);\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import { ChangeEvent, FormEvent, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nconst getUser = (userId: number): User | null => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nlet maxTodoId = [...todosFromServer].sort((a, b) => b.id - a.id)[0].id;\n\nconst newTodo = (title: string, userId: number): Todo => ({\n  id: maxTodoId,\n  userId,\n  title,\n  completed: false,\n  user: getUser(userId),\n});\n\nconst addTodo = (title: string, id: number) => {\n  maxTodoId += 1;\n  const todo = newTodo(title, id);\n\n  todos.push(todo);\n};\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState('');\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const changeTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    const validatedTitle = value.replace(/[^A-Za-zА-ЯЁа-яё ]/, '');\n\n    setErrorTitle(false);\n    setTitle(validatedTitle);\n  };\n\n  const changeUser = (event: ChangeEvent<HTMLSelectElement>) => {\n    setErrorUser(false);\n    setUser(event.target.value);\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    const checkTitle = !title.trim();\n\n    if (checkTitle || !user) {\n      if (checkTitle) {\n        setErrorTitle(true);\n      }\n\n      if (!user) {\n        setErrorUser(true);\n      }\n\n      return;\n    }\n\n    addTodo(title, Number(user));\n    setTitle('');\n    setUser('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Enter a title\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={changeTitle}\n            />\n          </label>\n          {errorTitle && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              name=\"user\"\n              value={user}\n              onChange={changeUser}\n            >\n              <option value=\"\">Choose a user</option>\n              {usersFromServer.map(({ id, name }) => (\n                <option value={id} key={id}>{name}</option>\n              ))}\n            </select>\n          </label>\n          {errorUser && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}